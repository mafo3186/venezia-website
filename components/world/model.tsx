/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.0 public/assets/venice.glb --root=./public --output=public/assets/model.tsx --shadows --transform --keepmeshes --console --typed 
Files: public/assets/venice.glb [8.6MB] > /home/luca/venezia-website/public/assets/venice-transformed.glb [736.12KB] (91%)
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

export type GLTFResult = GLTF & {
  nodes: {
    Water: THREE.Mesh
    Navmesh: THREE.Mesh
    Bridge: THREE.Mesh
    Building_1: THREE.Mesh
    Flower_Box001: THREE.Mesh
    Flower_Box002: THREE.Mesh
    Wall_Bracket001: THREE.Mesh
    Wall_Bracket003: THREE.Mesh
    Wall_Bracket002: THREE.Mesh
    Building_2: THREE.Mesh
    Building_3: THREE.Mesh
    Building_4: THREE.Mesh
    Building_5: THREE.Mesh
    Building_6: THREE.Mesh
    Rooftop_AC: THREE.Mesh
    Rooftop_Access: THREE.Mesh
    Building_7: THREE.Mesh
    GN_Instance: THREE.Mesh
    GN_Instance_3: THREE.InstancedMesh
    GN_Instance_6: THREE.InstancedMesh
    GN_Instance_1: THREE.InstancedMesh
    GN_Instance_4: THREE.InstancedMesh
    GN_Instance_7: THREE.InstancedMesh
    GN_Instance_2: THREE.InstancedMesh
    GN_Instance_5: THREE.InstancedMesh
    GN_Instance_8: THREE.InstancedMesh
    Balcony: THREE.InstancedMesh
    Balcony_1: THREE.InstancedMesh
    Balcony001: THREE.InstancedMesh
    Balcony002: THREE.InstancedMesh
    Pole: THREE.InstancedMesh
    PowerLineReceiver: THREE.InstancedMesh
    Frame4Height: THREE.InstancedMesh
    Hinge: THREE.InstancedMesh
    WindowDoor: THREE.InstancedMesh
  }
  materials: {}
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/assets/venice-transformed.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh castShadow receiveShadow geometry={nodes.Water.geometry} material={nodes.Water.material} position={[6.738, 0, -0.786]} scale={0.01} />
      <mesh castShadow receiveShadow geometry={nodes.Bridge.geometry} material={nodes.Bridge.material} />
      <mesh castShadow receiveShadow geometry={nodes.Building_1.geometry} material={nodes.Building_1.material} position={[5.535, 0.009, -3.518]} />
      <mesh castShadow receiveShadow geometry={nodes.Flower_Box001.geometry} material={nodes.Flower_Box001.material} position={[1.944, 4.629, -2.487]} rotation={[Math.PI / 2, 0, Math.PI / 2]} />
      <mesh castShadow receiveShadow geometry={nodes.Flower_Box002.geometry} material={nodes.Flower_Box002.material} position={[1.944, 4.629, -4.35]} rotation={[Math.PI / 2, 0, Math.PI / 2]} />
      <mesh castShadow receiveShadow geometry={nodes.Wall_Bracket001.geometry} material={nodes.Wall_Bracket001.material} position={[1.933, 6.469, -3.486]} rotation={[Math.PI / 2, 0, Math.PI / 2]} />
      <mesh castShadow receiveShadow geometry={nodes.Wall_Bracket003.geometry} material={nodes.Wall_Bracket003.material} position={[-5.37, 6.492, 1.791]} rotation={[-Math.PI / 2, 0, 0]} />
      <mesh castShadow receiveShadow geometry={nodes.Wall_Bracket002.geometry} material={nodes.Wall_Bracket002.material} position={[-2.671, 6.483, -4.62]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} />
      <mesh castShadow receiveShadow geometry={nodes.Building_2.geometry} material={nodes.Building_2.material} position={[4.788, 0.004, 3.5]} />
      <mesh castShadow receiveShadow geometry={nodes.Building_3.geometry} material={nodes.Building_3.material} position={[4.958, -0.015, 8.769]} />
      <mesh castShadow receiveShadow geometry={nodes.Building_4.geometry} material={nodes.Building_4.material} position={[-5.471, 0.009, 5.57]} />
      <mesh castShadow receiveShadow geometry={nodes.Building_5.geometry} material={nodes.Building_5.material} position={[-6.268, 0.001, -4.598]} />
      <mesh castShadow receiveShadow geometry={nodes.Building_6.geometry} material={nodes.Building_6.material} position={[-1.434, 5.07, -9.805]} />
      <mesh castShadow receiveShadow geometry={nodes.Rooftop_AC.geometry} material={nodes.Rooftop_AC.material} position={[-5.682, 9.525, -9.877]} />
      <mesh castShadow receiveShadow geometry={nodes.Rooftop_Access.geometry} material={nodes.Rooftop_Access.material} position={[-4.327, 9.524, -14.467]} />
      <mesh castShadow receiveShadow geometry={nodes.Building_7.geometry} material={nodes.Building_7.material} position={[3.953, -0.009, -11.862]} />
      <mesh castShadow receiveShadow geometry={nodes.GN_Instance.geometry} material={nodes.GN_Instance.material} position={[1.999, 3.751, -5.214]} rotation={[0, -Math.PI / 2, 0]} />
      <mesh castShadow receiveShadow geometry={nodes.GN_Instance_3.geometry} material={nodes.GN_Instance_3.material} position={[2.447, 4.231, 1.86]} rotation={[0.002, -Math.PI / 2, 0]} />
      <mesh castShadow receiveShadow geometry={nodes.GN_Instance_6.geometry} material={nodes.GN_Instance_6.material} position={[-3.552, 3.808, 1.796]} rotation={[-Math.PI, 0, -Math.PI]} />
      <mesh castShadow receiveShadow geometry={nodes.GN_Instance_1.geometry} material={nodes.GN_Instance_1.material} position={[0.873, 4.291, -5.214]} rotation={[0, -Math.PI / 2, 0]} />
      <mesh castShadow receiveShadow geometry={nodes.GN_Instance_4.geometry} material={nodes.GN_Instance_4.material} position={[1.197, 4.231, 1.86]} rotation={[0.002, -Math.PI / 2, 0]} />
      <mesh castShadow receiveShadow geometry={nodes.GN_Instance_7.geometry} material={nodes.GN_Instance_7.material} position={[-3.552, 4.318, 0.733]} rotation={[-Math.PI, 0, -Math.PI]} />
      <mesh castShadow receiveShadow geometry={nodes.GN_Instance_2.geometry} material={nodes.GN_Instance_2.material} position={[1.917, 3.786, -5.214]} rotation={[-Math.PI / 2, -1.12, -Math.PI / 2]} />
      <mesh castShadow receiveShadow geometry={nodes.GN_Instance_5.geometry} material={nodes.GN_Instance_5.material} position={[2.357, 4.231, 1.86]} rotation={[0.002, -Math.PI / 2, 0]} />
      <mesh castShadow receiveShadow geometry={nodes.GN_Instance_8.geometry} material={nodes.GN_Instance_8.material} position={[-3.552, 3.812, 1.777]} rotation={[-2.691, 0, Math.PI]} />
      <mesh castShadow receiveShadow geometry={nodes.Balcony.geometry} material={nodes.Balcony.material} position={[2.281, 4.184, 2.723]} />
      <mesh castShadow receiveShadow geometry={nodes.Balcony_1.geometry} material={nodes.Balcony_1.material} position={[2.281, 4.184, 4.754]} />
      <instancedMesh args={[nodes.Balcony001.geometry, nodes.Balcony001.material, 7]} castShadow receiveShadow instanceMatrix={nodes.Balcony001.instanceMatrix} position={[2.281, 4.184, 2.723]} rotation={[0, -Math.PI / 2, 0]} />
      <instancedMesh args={[nodes.Balcony002.geometry, nodes.Balcony002.material, 7]} castShadow receiveShadow instanceMatrix={nodes.Balcony002.instanceMatrix} position={[2.281, 4.184, 4.754]} rotation={[0, -Math.PI / 2, 0]} />
      <instancedMesh args={[nodes.Pole.geometry, nodes.Pole.material, 23]} castShadow receiveShadow instanceMatrix={nodes.Pole.instanceMatrix} />
      <instancedMesh args={[nodes.PowerLineReceiver.geometry, nodes.PowerLineReceiver.material, 18]} castShadow receiveShadow instanceMatrix={nodes.PowerLineReceiver.instanceMatrix} />
      <instancedMesh args={[nodes.Frame4Height.geometry, nodes.Frame4Height.material, 32]} castShadow receiveShadow instanceMatrix={nodes.Frame4Height.instanceMatrix} />
      <instancedMesh args={[nodes.Hinge.geometry, nodes.Hinge.material, 32]} castShadow receiveShadow instanceMatrix={nodes.Hinge.instanceMatrix} />
      <instancedMesh args={[nodes.WindowDoor.geometry, nodes.WindowDoor.material, 32]} castShadow receiveShadow instanceMatrix={nodes.WindowDoor.instanceMatrix} />
    </group>
  )
}

useGLTF.preload('/assets/venice-transformed.glb')
